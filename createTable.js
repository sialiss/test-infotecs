import { makeElement } from "./makeElement.js" 
// import { createHideBtn } from "./buttons.js"
// import { tableSort } from "./tableSort.js"
import { handleEditSubmit } from "./handleEditSubmit.js"
export class AwesomeCoolTable {

    constructor(table, tableMenu, { rowsPerPage, columns }, data) {
        this.table = table // –≠–ª–µ–º–µ–Ω—Ç —Ç–∞–±–ª–∏—Ü—ã –≤ DOC
        this.tableMenu = tableMenu // –≠–ª–µ–º–µ–Ω—Ç –º–µ–Ω—é –≤ DOC
        this.rowsPerPage = rowsPerPage // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        this.columns = columns // –ù–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ
        this.data = data // –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON
        this.objects = []
        for (const object of this.data) {
            // –ó–∞–ø–æ–ª–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏,
            // –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–≤–æ–π—Å—Ç–≤–∞—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã–µ
            // —ç—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑,
            // –∏ –Ω–µ –∏–∑–≤–ª–µ–∫–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ –∏–∑ —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–æ–≤
                this.objects.push(this.processObj(object))
        }

        // state —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ 
        this.tableSortOn = false // –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏
        this.tableSortMore = true // –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É/–ø—Ä–æ—Ç–∏–≤
        // state —Ñ–æ—Ä–º—ã (–æ—Ç–∫—Ä—ã—Ç–∞ –ª–∏)
        this.formOpen = false
    }

    createTable() {
        // –°–æ–∑–¥–∞–Ω–∏–µ —Ö–µ–¥–∞ —Ç–∞–±–ª–∏—Ü—ã
        const thead = makeElement("thead",
            makeElement(
                "tr",
                    ...Object.keys(this.columns).map((column) => 
                        // –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ç–∞–±–ª–∏—Ü—ã
                        this.createHeader(column)
                    )
            )
        )
        this.table.append(thead)
        // —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–µ–Ω—é —Ç–∞–±–ª–∏—Ü—ã
        this.fillTableMenu()
        // —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–æ–¥–∏ —Ç–∞–±–ª–∏—Ü—ã
        this.fillTable()
    }

    createHeader(column) {
        const pointer = makeElement(
            "p",
            {sortOn : false}, // state —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ (–≤–∫–ª—é—á–µ–Ω–∞ –ª–∏)
                "‚óã"
                
        )
        const th = makeElement(
            "th",
            {"click" : () => this.tableSort(pointer, column)},
                String(this.columns[column]),
                pointer
        ) 
        
        return th
    }

    fillTableMenu() {
        // –∑–¥–µ—Å—å —á–µ–∫–±–æ–∫—Å—ã –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∫–æ–ª–æ–Ω–æ–∫, –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        this.tableMenu.append(
            makeElement("div",
                ...Object.keys(this.columns).map((column) =>
                    this.createHideBtn(column)
                )
            )
        )
    }
    
    fillTable() {
        // –°–æ–∑–¥–∞—ë—Ç —Ç–µ–ª–æ —Ç–∞–±–ª–∏—Ü—ã
        const tbody = makeElement(
            "tbody",
                ...this.objects.map((object) => 
                    this.fillRow(object)
                )
        )
        this.table.append(tbody)
    }

    fillRow(object) {
        // –ó–∞–ø–æ–ª–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
        const tr = makeElement(
            "tr",
            {"click" : () => this.editObj(object)},
                ...Object.keys(this.columns).map((column) =>
                    // –°–æ–∑–¥–∞—ë—Ç —è—á–µ–π–∫—É –¥–ª—è –∫–∞–∂–¥–æ–π –∫–æ–ª–æ–Ω–∫–∏
                    this.createTd(object, column)
                ) 
        )
        return tr
    }

    createTd(object, column) {
        const td = makeElement(
            "td",
                String(object[column])
        )
        if (column == 'about') {
            // –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–ª–æ–Ω–∫–µ about css –∫–ª–∞—Å—Å (–¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)
            td.classList.add('about')
        }
        return td
    }

    tableSort(pointer, column) {
        // —Ä–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏

        if (!(pointer.sortOn)) {
            pointer.sortOn = !pointer.sortOn
            pointer.innerText = "ü†ë"
            this.tableSortOn = true
        }

        if (this.tableSortMore) {
            // —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É, –µ—Å–ª–∏ —Å—Ç–µ–π—Ç true
            this.objects.sort(
                (objA, objB) => objA[column] > objB[column] ? 1 : -1
            )
        } 
        // –æ–±—Ä–∞—Ç–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
        else {
            this.objects.sort(
                (objA, objB) => objA[column] < objB[column] ? 1 : -1
            )
        }

        this.tableRerender() // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        this.tableSortMore = !this.tableSortMore

        pointer.classList.toggle("rotated")
    }
    
    createHideBtn(i) {
        const btn = makeElement(
            "button",
            { "click" : () => this.hideColumn(i) },
                "‚òì"
        )
        return btn
}

    hideColumn(column) {
        // –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä —Ç–∞–±–ª–∏—Ü—ã –±–µ–∑ –∫–æ–ª–æ–Ω–∫–∏ —Å i—Ç—ã–º –Ω–æ–º–µ—Ä–æ–º
        // —Å–¥–µ–ª–∞—Ç—å —Å—Ç–µ–π—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        // —Å–¥–µ–ª–∞—Ç—å –∫–Ω–æ–ø–∫—É —á–µ–∫–±–æ–∫—Å–æ–º
        
    
        delete this.columns[column]

        this.table.tBodies[0].remove() // —É–±–∏—Ä–∞–µ—Ç —Å—Ç–∞—Ä—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Ç–µ–ª–∞ —Ç–∞–±–ª–∏—Ü—ã
        this.table.tHead.remove()
        this.tableMenu.buttons.remove()
        this.createTable() // –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä —Ç–µ–ª–∞ —Ç–∞–±–ª–∏—Ü—ã
    }

    editObj(object) {
        let form
        const formName = "editObj"
        if (!this.formOpen) {
            form = makeElement(
                "form",
                { name: formName },
                    ...Object.keys(this.columns).map((column) =>
                        makeElement(
                            "input",
                            {
                                value: object[column],
                                name: column
                            }
                        )
                    ),
                    makeElement(
                        "button",
                        { type: "submit" },
                            "‚úì"
                    )
            )
            
            this.tableMenu.append(form)
            this.formOpen = true
        }
        else {
            form = document.forms[formName]
            const inputNames = Object.keys(this.columns)
            for (const input of inputNames) {
                form[input].value = object[input]
            }
        }

        form.onsubmit = (e) =>
            this.handleEditSubmit(e, form.name, object,
                ...Object.keys(this.columns).map((column) => column))
    }

    handleEditSubmit(e, formName, object, ...inputNames) {
        e.preventDefault()
        const form = document.forms[formName]
        for (const prop of inputNames) {
            object[prop] = form[prop].value
        }
        this.tableRerender()
        form.remove()
        this.formOpen = false
    }

    tableRerender() {
        this.table.tBodies[0].remove() // —É–±–∏—Ä–∞–µ—Ç —Å—Ç–∞—Ä—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Ç–µ–ª–∞ —Ç–∞–±–ª–∏—Ü—ã
        this.fillTable() // –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä —Ç–µ–ª–∞ —Ç–∞–±–ª–∏—Ü—ã
    }

    getFromProperties(object, nedeedData) {
        // –±–µ—Ä—ë—Ç –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–≤–æ–π—Å—Ç–≤–∞—Ö (–µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ undefined)
        // –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –≤—Å–µ–º —Å–≤–æ–π—Å—Ç–≤–∞–º –æ–±—ä–µ–∫—Ç–∞ json, 
        // –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        for (const name of Object.keys(object)) {
                    if (object[name][nedeedData]) {
                        return object[name][nedeedData]
                    }
                }
    }

    processObj(object) {
        const processedObj = {}
        for (const column of Object.keys(this.columns)) {
            if (object[column] != undefined) {
                // –µ—Å–ª–∏ —É –æ–±—ä–µ–∫—Ç–∞ json –µ—Å—Ç—å –∫–æ–ª–æ–Ω–∫–∞ —Å –Ω—É–∂–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º,
                // —Ç–æ —è—á–µ–π–∫–∞ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è
                processedObj[column] = object[column]
            }
            else {
                // –µ—Å–ª–∏ –∫–æ–ª–æ–Ω–∫–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞, 
                // —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–≤–æ–π—Å—Ç–≤–∞—Ö
                processedObj[column] = this.getFromProperties(object, column)
            }
        }
        return processedObj
    }
}

