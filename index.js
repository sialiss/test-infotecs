// –∫–æ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ
// —è –∏—â—É –Ω—É–∂–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –≤ –º–∞—Å—Å–∏–≤–µ,
// —á–∏—â—É —Ç–∞–±–ª–∏—Ü—É –∏ —Å–æ–∑–¥–∞—é –≤ –Ω–µ–π –Ω–æ–≤—ã–µ —Ä—è–¥—ã
import {tableParam} from "./table.js"

// –≠–ª–µ–º–µ–Ω—Ç —Ç–∞–±–ª–∏—Ü—ã
const table = document.getElementById("table")

// –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ json –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤
// –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è fetch –Ω—É–∂–µ–Ω —Å–µ—Ä–≤–µ—Ä
const data = await fetch('./data.json').then(res => res.json())

function createTable(table, {quantLines, columns}) {
    // –°–æ–∑–¥–∞–Ω–∏–µ –≥–æ–ª–æ–≤—ã —Ç–∞–±–ª—Ü–∏—ã
    const thead = document.createElement("thead")
    table.append(thead)
    const tr = document.createElement("tr")
    thead.append(tr)
    
    Object.values(columns).forEach((column, i) => {
        // –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ç–∞–±–ª–∏—Ü—ã
        const th = document.createElement("th")
        th.innerText = column
        tr.append(th)
        th.append(createSortBtn(i))
        th.append(createHideBtn(i))
    }); 
    fillTable(table, columns, data)
}

function createSortBtn(i) {
    const btn = document.createElement("button")
    btn.addEventListener("click", () => tableAbcSort(i))
    btn.innerText = "ü†ì" // ü†ë
    return btn
}

function tableAbcSort(n) {
    
    // —Å–¥–µ–ª–∞—Ç—å —Å—Ç–µ–π—Ç—ã –∞–Ω—Å–æ—Ä—Ç, —Å–æ—Ä—Ç–∞–ª—Ñ, —Å–æ—Ä—Ç—Ä–µ–≤–µ—Ä—Å–∞–ª—Ñ, —Å–¥–µ–ª–∞—Ç—å –ª–∏–±–æ –¥–≤–µ –∫–Ω–æ–ø–∫–∏, 
    // –ª–∏–±–æ —á—Ç–æ–±—ã –æ–Ω–æ –ø–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º—É –Ω–∞–∂–∞—Ç–∏—é –º–µ–Ω—è–ª–æ—Å—å, –ª—É—á—à–µ –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
    // –ø–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–æ–Ω–∫—É
    const unsortedRows = Array.from(table.rows)
    let sortedRows = unsortedRows
    // –æ—Ç—Ä–µ–∑–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏    
    .slice(1) 
    // —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
    .sort((rowA, rowB) =>
            rowA.cells[n].innerHTML > rowB.cells[n].innerHTML ? 1 : -1);

    table.tBodies[0].append(...sortedRows);
}

function createHideBtn(i) {
    const btn = document.createElement("button")
    btn.addEventListener("click", () => hideColumn(i))
    btn.innerText = "‚òì"
    return btn
}

function hideColumn(n) {
    const rows = Array.from(table.rows)
    for (const row of rows) {
        console.log(row)
        row
    }
    // elemDoc.classList.toggle("hidden")
}

function fillTable(table, columns, data) {
    // –ó–∞–ø–æ–ª–Ω—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É
    // –°–æ–∑–¥–∞—ë—Ç —Ç–µ–ª–æ —Ç–∞–±–ª–∏—Ü—ã
    const tbody = document.createElement("tbody")
    table.append(tbody)

    for (const each of data) {
        const tr = document.createElement("tr")
        tbody.append(tr)
        fillRow(tr, each, columns)
    }
}

function fillRow(tr, each, columns) {
    // –ó–∞–ø–æ–ª–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    for (const column of Object.keys(columns)) {
        // –°–æ–∑–¥–∞—ë—Ç —è—á–µ–π–∫—É (—Å—Ç–æ–ª–±–∏–∫)
        const td = document.createElement("td")
        tr.append(td)
        if (column == 'about') {
            // –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–ª–æ–Ω–∫–µ about css –∫–ª–∞—Å—Å (–¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)
            td.classList.add('about')
        }
        if (each[column] != undefined) {
            // –µ—Å–ª–∏ —É –æ–±—ä–µ–∫—Ç–∞ json –µ—Å—Ç—å –∫–æ–ª–æ–Ω–∫–∞ —Å –Ω—É–∂–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º,
            // —Ç–æ —è—á–µ–π–∫–∞ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è
            td.innerText = each[column]
        }
        else {
            // –µ—Å–ª–∏ –∫–æ–ª–æ–Ω–∫–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞, 
            // —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–≤–æ–π—Å—Ç–≤–∞—Ö
            td.innerText = getFromProperties(each, column)
        }
    }
}

function getFromProperties(obj, nedeedData) {
    // –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ –≤—Å–µ–º —Å–≤–æ–π—Å—Ç–≤–∞–º –æ–±—ä–µ–∫—Ç–∞ json, 
    // –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    for (const name of Object.getOwnPropertyNames(obj)) {
                if (obj[name][nedeedData]) {
                    return obj[name][nedeedData]
                }
            }
}

createTable(table, tableParam)